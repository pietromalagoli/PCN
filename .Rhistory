install.packages("rgl")
library(igraph)
library(ggplot2)
library(RColorBrewer)
library(rgl)
N<-1000
g<-erdos.renyi.game(N,p=0.1/N, directed=F)
lay<-layout_with_fr(g)
plot(g,layout=lay, vertex.label=NA, 
     vertex.color="steelblue", edge.color="gray",
     vertex.size=2.5, edge.curved=0.2)
clus<-clusters(g)
#clus$csize
#clus$no
res<-data.frame()
for(p in seq(0.1/N, 2*log(N)/N, 0.02/N)){
  g<-erdos.renyi.game(N,p=p, directed=F) #we are building various erdos renyi with different p
  clu<-clusters(g)
  res<-rbind(res, data.frame(p=p, n=clu$no, lc=max(clu$csize)/N))  
} #n number of connected components
ggplot(res, aes(p,n)) + theme_bw() + scale_x_log10() + geom_line() #number of connected components
ggplot(res, aes(p,lc)) + theme_bw() + scale_x_log10() + geom_line() #percentage of points in the large connected components
ggplot(res, aes(p,lc)) + theme_bw() + scale_x_log10() + geom_line() +
   geom_vline(xintercept=1/N, color="tomato", linetype="dashed") #looking at the threshold(?)
source("common.R")
mypal<-colorRampPalette(rev(c(brewer.pal(9,"YlGnBu"))))(20)
node_info<-read.csv("city_undir_nodes.csv",header = T)
head(node_info) #nodes info from a road network
edge_info<-read.csv("city_undir_edges.csv",header = T)
head(edge_info)
node<-node_info[,c("osmid", "lat", "lon")]
edges <-data.frame(from=edge_info$u, to=edge_info$v)
g<-graph.data.frame(edges, directed=F, vertices=as.character(node$osmid))
g<-simplify(g)
layout<-matrix(0,vcount(g),2)
layout[,1]<-node$lon
layout[,2]<-node$lat
v_centr<-closeness(g,normalize=F)
colors<-vec2pal(v_centr,mypal)
sizes<-v_centr/max(v_centr)
plot(g,layout=layout, vertex.label=NA, vertex.color=colors, vertex.frame.color=NA, vertex.size=sizes, edge.color="gray80", edge_width=0.5)
#plot the road map of Padua
layout_2<-layout_with_fr(g)
plot(g,layout=layout_2, vertex.label=NA, vertex.color=colors, vertex.frame.color=NA, vertex.size=sizes, edge.color="gray80", edge_width=0.5)
layout_3<-layout_nicely(g) #find the nicest layout
plot(g,layout=layout_3, vertex.label=NA, vertex.color=colors, vertex.frame.color=NA, vertex.size=sizes, edge.color="gray80", edge_width=0.5)
 #end of road map
node_info<-read.table("brain_meta.csv", header=T, sep=";")
adj_info<- read.table("brain_adj.csv", header=T, sep=";")
node_info$nodeID<-node_info$nodeID+1 #non va
adj_info<-adj_info[1:800,2:801]
g<-graph_from_adjacency_matrix(as.matrix(adj_info), mode="undirected", weighted=T, add.colnames=F)
g<-simplify(g)
layout<-matrix(0,vcount(g),3)
layout[,1]<-node_info$x
layout[,2]<-node_info$y
layout[,3]<-node_info$z
v_centr<-closeness(g,normalize=F)
node_colors<-vec2pal(v_centr,mypal)
degs<-degree(g)
sizes<-degs/max(degs)
plot(g,layout=layout, vertex.label=NA, vertex.color=node_colors, 
     vertex.frame.color=NA, vertex.size=5*sizes, edge.color="gray80", edge.width=0.1*E(g)$weight)
rglplot(g,layout=layout, vertex.label=NA, vertex.color=node_colors, 
     vertex.frame.color=NA, vertex.size=5*sizes, edge.color="gray80", edge.width=0.1*E(g)$weight)
q()
installed.packages()
install.packages("geosphere")
q
q()
